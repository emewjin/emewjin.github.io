{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/codesoom/4th/","result":{"data":{"site":{"siteMetadata":{"title":"emewjin.log","siteUrl":"https://emewjin.github.io"}},"markdownRemark":{"id":"0a16edb6-8736-51db-bfa9-437d113ebff5","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C%EC%88%A8-4%EC%A3%BC%EC%B0%A8-%EC%A3%BC%EA%B0%84%ED%9A%8C%EA%B3%A0\">코드숨 4주차 주간회고</a></p>\n<ul>\n<li>\n<p><a href=\"#%EC%83%88%EB%A1%9C-%EC%95%8C%EA%B2%8C-%EB%90%9C-%EA%B2%83\">새로 알게 된 것</a></p>\n<ul>\n<li><a href=\"#rtl-%EC%9E%98-%EC%93%B0%EA%B8%B0\">RTL 잘 쓰기</a></li>\n<li><a href=\"#%EB%A7%A4%EB%B2%88-mock%EC%9D%84-%EC%B4%88%EA%B8%B0%ED%99%94-%ED%95%98%EB%8A%94-%EC%84%B8-%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\">매번 mock을 초기화 하는 세 가지 방법</a></li>\n<li><a href=\"#hook%EA%B3%BC-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%9D%98-%EA%B4%80%EA%B3%84\">Hook과 컨테이너의 관계</a></li>\n<li><a href=\"#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EC%BC%80%EC%9D%B4%EC%8A%A4%EB%A7%8C-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%B4%EB%8F%84-%EB%90%9C%EB%8B%A4\">대표적인 케이스만 테스트해도 된다</a></li>\n<li><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EA%B0%9D%EC%B2%B4%EB%8A%94-%EC%96%B4%EB%94%94%EC%84%9C-%EB%8B%A4%EB%A3%A8%EC%96%B4%EC%95%BC-%ED%95%A0%EA%B9%8C\">이벤트 객체는 어디서 다루어야 할까?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9E%98-%EB%AA%BB%ED%95%9C-%EA%B2%83\">잘 못한 것</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%8B%A4%EC%9D%8C-%EC%A3%BC%EC%B0%A8%EC%97%90-%ED%95%A0-%EA%B2%83\">다음 주차에 할 것</a></p>\n</li>\n</ul>\n</li>\n</ul>","excerpt":"코드숨 4주차 주간회고 벌써 교육 과정의 3분의 1이 지났다 😖 3F를 구분하기가 힘들어 이번에는 다른 형식으로 회고를 작성해본다. 새로 알게 된 것 RTL 잘 쓰기 RTL에서 제공하는 쿼리는 우선순위가 있는데, 이에 익숙해지기 위해 testing-playground.com…","html":"<h1 id=\"코드숨-4주차-주간회고\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%88%A8-4%EC%A3%BC%EC%B0%A8-%EC%A3%BC%EA%B0%84%ED%9A%8C%EA%B3%A0\" aria-label=\"코드숨 4주차 주간회고 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드숨 4주차 주간회고</h1>\n<p>벌써 교육 과정의 3분의 1이 지났다 😖<br>\n3F를 구분하기가 힘들어 이번에는 다른 형식으로 회고를 작성해본다.</p>\n<h2 id=\"새로-알게-된-것\" style=\"position:relative;\"><a href=\"#%EC%83%88%EB%A1%9C-%EC%95%8C%EA%B2%8C-%EB%90%9C-%EA%B2%83\" aria-label=\"새로 알게 된 것 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로 알게 된 것</h2>\n<h3 id=\"rtl-잘-쓰기\" style=\"position:relative;\"><a href=\"#rtl-%EC%9E%98-%EC%93%B0%EA%B8%B0\" aria-label=\"rtl 잘 쓰기 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RTL 잘 쓰기</h3>\n<ul>\n<li>RTL에서 제공하는 쿼리는 우선순위가 있는데, 이에 익숙해지기 위해 <a href=\"www.testing-playground.com\">testing-playground.com</a>를 활용하면 좋다. <a href=\"https://chrome.google.com/webstore/detail/testing-playground/hejbmebodbijjdhflfknehhcgaklhano/related\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">크롬 익스텐션</a>도 있어서 바로 설치했다.</li>\n<li>RTL을 보다 잘 알고 사용하기 위해선 공식문서 외에도 <a href=\"https://kentcdodds.com/blog/common-mistakes-with-react-testing-library\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Common mistakes with React Testing Library</a>을 꼭 읽어야 하는 것 같다. RTL 개발자가 쓴 글인듯 한데, RTL을 사용하며 많이 하는 실수들에 대한 글이다. 한국어 번역 글도 있는데 상당히 유명한 글인듯 하다.</li>\n</ul>\n<h3 id=\"매번-mock을-초기화-하는-세-가지-방법\" style=\"position:relative;\"><a href=\"#%EB%A7%A4%EB%B2%88-mock%EC%9D%84-%EC%B4%88%EA%B8%B0%ED%99%94-%ED%95%98%EB%8A%94-%EC%84%B8-%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95\" aria-label=\"매번 mock을 초기화 하는 세 가지 방법 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>매번 mock을 초기화 하는 세 가지 방법</h3>\n<p>일단 초기화 해야 하는 이유는 각 테스트케이스가 독립적이기 때문이다. mock을 초기화 할 수 있는 방법으로는 세 가지가 있는 것 같다.</p>\n<ol>\n<li>하나하나 다 초기화 하는 코드를 작성한다</li>\n<li>beforeEach를 활용한다</li>\n<li>jest.config.js 에 설정을 추가한다 (Reference. <a href=\"https://haeguri.github.io/2020/12/21/clean-up-jest-mock/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jest에서 Mock을 정리하는 방법</a>)</li>\n</ol>\n<p>1번을 사용할 일은 없고, 보통 2번 아니면 3번을 사용할 것 같다. 2번과 3번을 비교해보면, 3번의 경우에는 ‘초기화 하지 않음’이 필요할 때 특정 케이스만 예외처리 하기에 곤란하겠단 생각이 들었다.</p>\n<p>때문에 <strong>통제권</strong> (코드리뷰에선 통제권이라고 표현하셨는데 좋은 것 같다)을 갖기 위해서는 3번보다 2번을 활용함이 더 적절할 것 같다. 다만 이번 과제에서는 그런 예외케이스가 존재하지 않아 3번을 이용했다.</p>\n<h3 id=\"hook과-컨테이너의-관계\" style=\"position:relative;\"><a href=\"#hook%EA%B3%BC-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%9D%98-%EA%B4%80%EA%B3%84\" aria-label=\"hook과 컨테이너의 관계 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hook과 컨테이너의 관계</h3>\n<p>Reference. <a href=\"https://yujonglee.com/socwithhooks.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React Hook VS Container Component</a></p>\n<p>리액트에서 Container-Presenter 패턴이 유명해진 본격적인 계기가 된 유~명한 글에서는 훅의 등장 이후로 이 패턴을 쓰지 말라고 말하고 있다.<br>\n왜냐하면 훅의 등장 이후로 컨테이너 역할을 훅이 대신해줄 수 있기 때문인데, 이와 관련해 팀 내부에서 이야기가 있었다.<br>\n논의 과정에서 내가 생각했던 바는 커스텀 훅으로 로직을 분리했고, 해당 훅이 컨테이너의 역할을 해주기 때문에, 커스텀 훅과 presenter 컴포넌트를 묶는 별도의 컨테이너 컴포넌트가 필요하지 않을 것이니 컨테이너를 없애거나, 아니면 다른 이름으로 변경하는 것이었다.<br>\n그 과정에서 위의 글을 공유받았는데, 내용이 아주 타당하다는 생각을 했고 트레이너 분께도 문의해보았는데 같은 생각이셨다.<br>\n자세한 내용은 위 글을 직접 읽어보는 것이 좋고, 요약하자면 다음과 같다.</p>\n<ol>\n<li>\n<p>뷰를 책임지는 Presenter 컴포넌트를 여러 비즈니스 로직과 함께 사용하고 싶다면, <strong>즉 재사용할 일이 있다면</strong> 컨테이너 컴포넌트를 따로 만들어 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token function\">useData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 커스텀 훅이 반환하는 것이 뭐든간에</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Presenter</span></span> <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Presenter를 재활용 할 수 있다</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>그럴일이 없다면 커스텀 훅으로 컨테이너를 대체할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token function\">useData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Container 역할을 함</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Presenter</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ol>\n<h3 id=\"대표적인-케이스만-테스트해도-된다\" style=\"position:relative;\"><a href=\"#%EB%8C%80%ED%91%9C%EC%A0%81%EC%9D%B8-%EC%BC%80%EC%9D%B4%EC%8A%A4%EB%A7%8C-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%B4%EB%8F%84-%EB%90%9C%EB%8B%A4\" aria-label=\"대표적인 케이스만 테스트해도 된다 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대표적인 케이스만 테스트해도 된다</h3>\n<p>이번 과제에서 3개의 input을 핸들링 해야해서, input의 name을 활용해 하나의 이벤트 핸들러만으로 처리를 했고, 테스트는 3개의 input 모두에 대해 작성했었다.\n근데 어차피 같은 로직을 쓰는 것이기 때문에 3개 중 1개만 대표적으로 테스트해도 된다고 한다.</p>\n<h3 id=\"이벤트-객체는-어디서-다루어야-할까\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EA%B0%9D%EC%B2%B4%EB%8A%94-%EC%96%B4%EB%94%94%EC%84%9C-%EB%8B%A4%EB%A3%A8%EC%96%B4%EC%95%BC-%ED%95%A0%EA%B9%8C\" aria-label=\"이벤트 객체는 어디서 다루어야 할까 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이벤트 객체는 어디서 다루어야 할까?</h3>\n<p>presenter 컴포넌트에서 다루는 것이 좋다. 이벤트 객체를 이용해서 상태를 업데이트하기 때문에 상태를 다루는 이벤트 핸들러를 container 컴포넌트에 작성하고, 이벤트 객체도 거기서 다루게 했었다. 하지만 의존성 관리 측면에서, 이벤트 객체는 presenter 컴포넌트에서 처리하는 것이 더 적절하다.</p>\n<h2 id=\"잘-못한-것\" style=\"position:relative;\"><a href=\"#%EC%9E%98-%EB%AA%BB%ED%95%9C-%EA%B2%83\" aria-label=\"잘 못한 것 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>잘 못한 것</h2>\n<ul>\n<li>의식적으로 TDD 사이클에 맞추어 커밋을 끊기. 작게 커밋을 쪼개 남기는 것에는 익숙한데 TDD 사이클엔 익숙하지 않아, TDD 사이클을 따라가다가 <code class=\"language-text\">테스트 작성 - 구현</code>을 하나로 퉁쳤다가, 뒤죽박죽 컨벤션의 커밋을 남기게 되었다.</li>\n<li>presenter 컴포넌트에 대한 테스트가 미비했다.</li>\n<li>4주차는 과제 제출일도 늦고 코드리뷰 피드백 반영도 늦었던 주차이다 ㅠㅠ😓</li>\n</ul>\n<h2 id=\"다음-주차에-할-것\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%8C-%EC%A3%BC%EC%B0%A8%EC%97%90-%ED%95%A0-%EA%B2%83\" aria-label=\"다음 주차에 할 것 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다음 주차에 할 것</h2>\n<ul>\n<li>의식적으로 TDD 사이클에 맞추어 커밋 남기기</li>\n<li>다시 조금씩 그리고 빠르게 과제 제출하고, 빠르게 피드백 반영하기.\n<ul>\n<li>근데 월요일 제출은 벌써 망한 것 같다 ㅎ;;;</li>\n</ul>\n</li>\n<li>mock 초기화, presenter 컴포넌트에 대한 테스트 잊지말기</li>\n</ul>","fields":{"slug":"/codesoom/4th/"},"frontmatter":{"title":"코드숨 리액트 6기 4주차 주간회고","date":"2021-12-27","lastUpdated":"2021-12-27","description":"코드숨 리액트 6기 4주차 주간회고","tags":["코드숨"]}},"previous":{"fields":{"slug":"/codesoom/3rd/"},"frontmatter":{"title":"코드숨 리액트 6기 3주차 주간회고"}},"next":{"fields":{"slug":"/codesoom/5th/"},"frontmatter":{"title":"코드숨 리액트 6기 5주차 주간회고"}}},"pageContext":{"id":"0a16edb6-8736-51db-bfa9-437d113ebff5","previousPostId":"3f8aa1ff-5d49-525c-99f8-9c9770fd6254","nextPostId":"ddb6d3f0-33db-54a4-a390-2363cb89890e","ogImage":"public/og-image/codesoom/4th/index.png"}},"staticQueryHashes":["2260143708","984448874"]}