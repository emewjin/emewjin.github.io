{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/grokking-simplicity/","result":{"data":{"site":{"siteMetadata":{"title":"emewjin.log","siteUrl":"https://emewjin.github.io"}},"markdownRemark":{"id":"aca20d69-1778-5620-bc9f-ee0d5dcfe536","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EB%B6%80%EC%88%98%ED%9A%A8%EA%B3%BC\">부수효과</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%BD%94%EB%93%9C%EC%9D%98-%EA%B5%AC%EB%B6%84\">코드의 구분</a></p>\n<ul>\n<li><a href=\"#%EC%95%A1%EC%85%98\">액션</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B3%84%EC%B8%B5%ED%99%94-%EC%84%A4%EA%B3%84\">계층화 설계</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%88%EC%B0%A8%EC%A0%81%EC%9D%B8-%EC%BD%94%EB%93%9C%EB%9E%80\">절차적인 코드란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B6%88%EB%B3%80%EC%84%B1\">불변성</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EA%B7%9C%EC%B9%99%EA%B3%BC-%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B7%9C%EC%B9%99%EC%9D%80-%EC%96%B4%EB%96%A4-%EC%B0%A8%EC%9D%B4%EA%B0%80-%EC%9E%88%EB%82%98%EC%9A%94\">비즈니스 규칙과 도메인 규칙은 어떤 차이가 있나요?</a></p>\n<ul>\n<li><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4%EC%99%80-%EB%8F%84%EB%A9%94%EC%9D%B8%EC%97%90-%EB%AA%A8%EB%91%90-%EC%86%8D%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98%EB%8F%84-%EC%9E%88%EC%9D%84-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94\">비즈니스와 도메인에 모두 속하는 함수도 있을 수 있나요?</a></li>\n</ul>\n</li>\n</ul>","excerpt":"…","html":"<blockquote>\n<p>아직 읽는 중!</p>\n</blockquote>\n<p>내가 함수형에 대해 제대로 알고 있긴 한걸까 의문이 들던 차에 알게 된 책이다. 책 제목처럼 이해가 정말 잘 된다고 칭찬이 자자하길래 회사책으로 신청해서 읽어보고 있는데, 평소 아리송하던 개념들에 대해 알기 쉽게 설명해주는 부분이 맘에 든다.</p>\n<ul>\n<li>책에서 제공하는 예제코드 : <a href=\"https://github.com/emewjin/fp-book-example-code\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/emewjin/fp-book-example-code</a></li>\n</ul>\n<h2 id=\"부수효과\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EC%88%98%ED%9A%A8%EA%B3%BC\" aria-label=\"부수효과 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부수효과</h2>\n<p>함수형 프로그래밍은 <strong>부수효과 없는 순수 함수를 짜는 패러다임</strong>이다, 라고 많이 알려져있는데 이 책에선 정말 그럴까? 에 대해 이야기한다.</p>\n<p>먼저 생소할 수 있는 부수효과의 뜻을 <strong>리턴 외의 모든 것</strong>으로 책에서 정의하고 있다. 그렇기 때문에 부수 효과를 피하고 싶긴 하지만, <strong>전혀 사용하지 않을 수는 없다</strong>고 책에서는 이야기 한다. 대신 부수 효과를 잘 다룰 수 있게 도와주는 것이 함수형이라는 것이다.</p>\n<p>부수효과는,</p>\n<ul>\n<li>기능이나 동작만을 의미하지 않는다.</li>\n<li>암묵적인 입력과 출력 (함수의 입출력으로 명시되지 않은 것)도 해당한다.</li>\n</ul>\n<h2 id=\"코드의-구분\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%9D%98-%EA%B5%AC%EB%B6%84\" aria-label=\"코드의 구분 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드의 구분</h2>\n<p>부수 효과를 잘 다루기 위해서, 부를 때 조심해야 하는 코드를 구분해야 한다고 말한다. 함수형 코딩에서 코드는 크게 세 가지로 분류된다. <strong>액션, 계산, 데이터.</strong></p>\n<blockquote>\n<p>액션, 계산, 데이터의 구분에 대해 3장에서 예제와 연습문제를 통해 자세히 소개하고 있다.</p>\n</blockquote>\n<p>책에서 함수형 프로그래머들은 액션보다 계산을, 계산보다 데이터를 더 좋아한다고 이야기하는데 이 말은 액션에서 데이터로 갈수록 순수함수라는 말이다. 즉, 부수 효과를 최소화하고 가능한 많은 순수함수를 짜야 한다는 말과도 같다.</p>\n<p>코드를 구분할 때 특히 <strong>호출하는 시점</strong>이 중요하다고 말한다. 호출하는 시점에 의존한다는 것은 언제 호출하냐에 따라 결과가 달라질 수 있다는 것을 의미한다. 이런 코드를 액션이라고 분류한다.</p>\n<p><strong>분류에서 얻는 이득?</strong></p>\n<ul>\n<li>재사용성</li>\n<li>가독성 향상 : 복잡도를 낮춘다</li>\n<li>더 작게 만들어 테스트하기 쉬워진다.</li>\n</ul>\n<h3 id=\"액션\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98\" aria-label=\"액션 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션</h3>\n<ul>\n<li>기능, 동작만이 액션이 아니다. 변경 가능한 것들을 액션이라고 한다.</li>\n<li>액션은 사용시 동시에 실행되는 것이 있는지, 과거에 실행되었거나 미래에 실행할 것이 있는지, 실행 횟수 등등을 고려해야 하기 때문에 번거롭다.</li>\n<li>가능한 작게 만들어야 한다. 작게 만든다는 것은 액션 안에서 계산이나 데이터로 뺄 것이 있는지 확인하고 있으면 뺀다는 말이다.</li>\n</ul>\n<h2 id=\"계층화-설계\" style=\"position:relative;\"><a href=\"#%EA%B3%84%EC%B8%B5%ED%99%94-%EC%84%A4%EA%B3%84\" aria-label=\"계층화 설계 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>계층화 설계</h2>\n<p>그렇게 코드를 구분하고 분류하다보면 자연스럽게 계층이 생긴다. 그리고 각 계층은 하위 계층에 의존한다. 가장 자주 바뀌는 비즈니스 레이어는 도메인 레이어에 의존하고, 도메인 레이어는 자주 바뀌지 않는 기술 스택 레이어에 의존한다.</p>\n<ul>\n<li><strong>함수 이름</strong>은 함수가 어느 계층에 위치할지 결정하기 위한 정보로 쓸 수 있다.</li>\n<li>같은 계층에 있는 함수는 같은 목적을 가져야 한다.</li>\n</ul>\n<h2 id=\"절차적인-코드란\" style=\"position:relative;\"><a href=\"#%EC%A0%88%EC%B0%A8%EC%A0%81%EC%9D%B8-%EC%BD%94%EB%93%9C%EB%9E%80\" aria-label=\"절차적인 코드란 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>절차적인 코드란?</h2>\n<ul>\n<li>비즈니스 규칙을 테스트하기 어렵다.\n<ul>\n<li>절차적인 코드를 지양해야 하는 이유 : 비즈니스 규칙을 계산으로 분리하여 이것만 빠르게 테스트해야 하기 때문</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"불변성\" style=\"position:relative;\"><a href=\"#%EB%B6%88%EB%B3%80%EC%84%B1\" aria-label=\"불변성 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불변성</h2>\n<ul>\n<li>불변성을 지키는 것과 초기화를 구분해야 한다.</li>\n</ul>\n<h2 id=\"비즈니스-규칙과-도메인-규칙은-어떤-차이가-있나요\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EA%B7%9C%EC%B9%99%EA%B3%BC-%EB%8F%84%EB%A9%94%EC%9D%B8-%EA%B7%9C%EC%B9%99%EC%9D%80-%EC%96%B4%EB%96%A4-%EC%B0%A8%EC%9D%B4%EA%B0%80-%EC%9E%88%EB%82%98%EC%9A%94\" aria-label=\"비즈니스 규칙과 도메인 규칙은 어떤 차이가 있나요 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비즈니스 규칙과 도메인 규칙은 어떤 차이가 있나요?</h2>\n<p>장바구니에 대한 코드를 짜고 있다고 가정해보자. 장바구니 기능은 전자상거래를 만드는 곳이라면 어디에나 있으므로 일반적이고, 대부분 비슷하다. 이걸 도메인 규칙이라고 한다.</p>\n<p>장바구니에 관한 것은 또한 모두 비즈니스 규칙이라고 생각하기 쉽지만, 사실은 아니다. 비즈니스 규칙(로직)이란 그 회사만의 특별한 규칙을 의미한다. 빠르게 바뀐다. 예를 들어 A 라는 회사의 장바구니 도메인에는 3개 이상 구매시 무료배송이라는 비즈니스 로직이 있지만 B 회사에는 1개만 구매해도 무료배송이라는 비즈니스 로직이 있을 수 있는 것이다.</p>\n<h3 id=\"비즈니스와-도메인에-모두-속하는-함수도-있을-수-있나요\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4%EC%99%80-%EB%8F%84%EB%A9%94%EC%9D%B8%EC%97%90-%EB%AA%A8%EB%91%90-%EC%86%8D%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98%EB%8F%84-%EC%9E%88%EC%9D%84-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94\" aria-label=\"비즈니스와 도메인에 모두 속하는 함수도 있을 수 있나요 permalink\" class=\"heading-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비즈니스와 도메인에 모두 속하는 함수도 있을 수 있나요?</h3>\n<p>있을 수 있지만, 계층 관점에서 보면 smell code이다.</p>\n<blockquote>\n<p>비즈니스 규칙에서 장바구니가 배열인지 알아야 한다면 문제가 될 수 있습니다.</p>\n</blockquote>","fields":{"slug":"/grokking-simplicity/"},"frontmatter":{"title":"[독서] 쏙쏙 들어오는 함수형 코딩","date":"2022-05-31","lastUpdated":"2022-05-31","description":"(읽는 중) 쏙쏙 들어오는 함수형 코딩을 읽고 기억할 부분을 메모하는 글","tags":["Javascript","Book"]}},"previous":{"fields":{"slug":"/graphql-wiki/"},"frontmatter":{"title":"GraphQL 위키"}},"next":{"fields":{"slug":"/model/"},"frontmatter":{"title":"프론트엔드 개발에서 서버 데이터를 모델로 관리한다는 것"}}},"pageContext":{"id":"aca20d69-1778-5620-bc9f-ee0d5dcfe536","previousPostId":"1b69f728-9e25-58a9-b10e-68e8a3402d8f","nextPostId":"f0274086-cc44-5277-80cd-a2e42729e1a4","ogImage":"public/og-image/grokking-simplicity/index.png"}},"staticQueryHashes":["2260143708","658623446","984448874"]}