{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/gh-multi-account/","result":{"data":{"site":{"siteMetadata":{"title":"emewjin.log","siteUrl":"https://emewjin.github.io"}},"markdownRemark":{"id":"e3335809-11b8-5041-8c49-4daf8b49de83","tableOfContents":"","excerpt":"드 디 어 !!!!!!!!!!!!!!! 버전 2.40.0에서 공식적으로 multi account를 지원한다 끼얏호~~~~~~ 아주 간단하게 버전 업데이트를 하고 (나는 brew로 설치했어서 brew…","html":"<p>드 디 어 !!!!!!!!!!!!!!!<br>\n<a href=\"https://github.com/cli/cli/releases/tag/v2.40.0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">버전 2.40.0</a>에서 공식적으로 multi account를 지원한다 끼얏호~~~~~~</p>\n<p>아주 간단하게</p>\n<ol>\n<li>버전 업데이트를 하고 (나는 brew로 설치했어서 brew로 업데이트)</li>\n<li>현재 로그인 되어있는 계정을 확인 후 (<code class=\"language-text\">gh auth status</code>)</li>\n<li><code class=\"language-text\">gh auth login</code>으로 스위칭할 계정에 로그인하여 계정을 추가하고</li>\n<li><code class=\"language-text\">gh auth status</code>에 잘 추가되어있나 확인한 다음</li>\n<li><code class=\"language-text\">gh auth switch</code>를 실행시켜보면</li>\n</ol>\n<p>짜자잔~\n<img src=\"https://github.com/emewjin/emewjin.github.io/assets/76927618/cab04f95-f2d9-4eab-a632-5fc2da3fe4b5\" alt=\"gh multi account 성공 모습\"></p>\n<p>그동안 커뮤니티에서 공유되던 방법들은 되다 안되다 했어서 너무 불편했는데, 정식으로 지원하는 기능이 되어서 너무너무 행복하다… 🫠</p>\n<hr>\n<blockquote>\n<p>여기서부터는 multi account 정식 지원 전, 2022년에 작성된 글입니다.</p>\n</blockquote>\n<p><a href=\"https://cli.github.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">github cli 툴인 <code class=\"language-text\">gh</code></a>는 아직 공식적으로 multi account를 지원하지 않는데, 니즈는 엄청나다.<br>\n<a href=\"https://github.com/cli/cli/issues/326\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">>> 관련해서 오픈되어 있는 이슈</a></p>\n<p>이슈의 쓰레드를 쭉 읽어보다가 <code class=\"language-text\">gh</code>의 alias를 이용한 <a href=\"https://github.com/cli/cli/issues/326#issuecomment-1095018771\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">요 댓글</a>의 솔루션이 가장 깔끔하고 간편하길래 써봤는데 아주 잘 됨. 이제 간단하게 회사 계정과 개인 계정을 <code class=\"language-text\">gh</code>로 왔다갔다 할 수 있다… 🥹</p>\n<p>아래는 <a href=\"https://gist.github.com/yermulnik/017837c01879ed3c7489cc7cf749ae47\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">yermulnik의 솔루션</a> 한국어 버전쯤…?</p>\n<ol>\n<li>\n<p>먼저 gh config 디렉토리로 이동한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">~/.config/gh</code></pre></div>\n</li>\n<li>\n<p>해당 디렉토리에서 계정별 hosts.yml을 생성한다.\nyml뒤에 붙는 문자는 personal, work, 뭐든 어떤 계정인지 식별할 수 있는 이름을 붙이면 됨. 이 식별자는 밑에서 alias로 쓰일 것.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># touch hosts.yml.{식별자}</span>\n<span class=\"token function\">touch</span> hosts.yml.personal</code></pre></div>\n</li>\n<li>\n<p>생성한 hosts.yml을 열고</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">vi</span> hosts.yml.personal</code></pre></div>\n</li>\n<li>\n<p>아래 내용을 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">github.com:\n    oauth_token: <span class=\"token punctuation\">[</span>your token<span class=\"token punctuation\">]</span>\n    git_protocol: <span class=\"token punctuation\">[</span>ssh 또는 https<span class=\"token punctuation\">]</span>\n    user: <span class=\"token punctuation\">[</span>github username<span class=\"token punctuation\">]</span></code></pre></div>\n</li>\n<li>\n<p>그리고 <code class=\"language-text\">gh</code>의 alias를 설정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># gh alias set --shell {식별자} 'cp ~/.config/gh/hosts.yml.{식별자} ~/.config/gh/hosts.yml &amp;&amp; gh auth status'</span>\ngh <span class=\"token builtin class-name\">alias</span> <span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">--shell</span> personal <span class=\"token string\">'cp ~/.config/gh/hosts.yml.personal ~/.config/gh/hosts.yml &amp;&amp; gh auth status'</span></code></pre></div>\n</li>\n</ol>\n<p>이제 필요할 때 alias를 입력하면 미리 설정해둔 계정으로 로그인된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token operator\">></span> gh personal\ngithub.com\n  ✓ Logged <span class=\"token keyword\">in</span> to github.com as\n  ✓ Git operations <span class=\"token keyword\">for</span> github.com configured to use\n  ✓ Token:</code></pre></div>","fields":{"slug":"/gh-multi-account/"},"frontmatter":{"title":"gh 여러 계정 사용하기","date":"2022-09-26","lastUpdated":"2023-12-18","description":"git cli 툴인 gh로 여러 계정을 간편하게 왔다갔다 해보자","tags":["gh","dx"]}},"previous":{"fields":{"slug":"/why-wont-use-nextjs/"},"frontmatter":{"title":"(번역) 내가 Next.js를 사용하지 않는 이유"}},"next":null},"pageContext":{"id":"e3335809-11b8-5041-8c49-4daf8b49de83","previousPostId":"f4ba1a31-de13-5877-8fb6-fb450164abbc","nextPostId":null,"ogImage":"public/og-image/gh-multi-account/index.png"}},"staticQueryHashes":["2260143708","658623446","984448874"]}